{"ast":null,"code":"var _jsxFileName = \"E:\\\\CustomWallApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Wall from './Wall';\nimport './Wall.css';\nimport { ChromePicker } from 'react-color';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultWalls = ['/walls/wall1.jpg', '/walls/wall2.jpg', '/walls/wall3.jpg', '/walls/wall4.jpg', '/walls/wall5.jpg', '/walls/wall6.jpg'];\nfunction App() {\n  _s();\n  // Wall background state\n  const [selectedType, setSelectedType] = useState('image');\n  const [selectedWall, setSelectedWall] = useState(defaultWalls[0]);\n  const [selectedColor, setSelectedColor] = useState('#ffffff');\n  const [uploadedWall, setUploadedWall] = useState(null);\n  const [width, setWidth] = useState(800);\n  const [height, setHeight] = useState(500);\n  const [showColorPicker, setShowColorPicker] = useState(false);\n\n  // Wall image editing state (for right controls)\n  const wallRef = useRef();\n  const [selectedImgId, setSelectedImgId] = useState(null);\n  const [showShapeSelector, setShowShapeSelector] = useState(false);\n  const [wallImages, setWallImages] = useState([]);\n\n  // Handle wall background selection\n  const handleWallClick = wall => {\n    setSelectedType('image');\n    setSelectedWall(wall);\n    setUploadedWall(null);\n  };\n  const handleColorButtonClick = () => {\n    setShowColorPicker(prev => !prev);\n  };\n  const handleColorChange = color => {\n    setSelectedType('color');\n    setSelectedColor(color.hex);\n    setSelectedWall(null);\n    setUploadedWall(null);\n  };\n  const handleUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedType('upload');\n      setUploadedWall(URL.createObjectURL(file));\n      setSelectedWall(null);\n    }\n  };\n\n  // Wall image controls (for images placed on the wall)\n  const handleImageUpload = e => {\n    const files = Array.from(e.target.files);\n    const newImages = files.map((file, index) => ({\n      id: Date.now() + index,\n      src: URL.createObjectURL(file),\n      x: 0,\n      y: 0,\n      width: 150,\n      height: 150,\n      shape: 'rectangle',\n      zoom: 1\n    }));\n    setWallImages(prev => [...prev, ...newImages]);\n  };\n  const handleSelectShape = () => {\n    if (selectedImgId) setShowShapeSelector(true);\n  };\n  const handleDeleteSelected = () => {\n    if (selectedImgId !== null) {\n      setWallImages(prev => prev.filter(img => img.id !== selectedImgId));\n      setSelectedImgId(null);\n    }\n  };\n  const handleSaveWall = async () => {\n    if (!wallRef.current) return;\n    const html2canvas = (await import('html2canvas')).default;\n    const canvas = await html2canvas(wallRef.current);\n    const link = document.createElement('a');\n    link.download = 'custom-wall.png';\n    link.href = canvas.toDataURL('image/png');\n    link.click();\n  };\n\n  // Compose wallBg prop for Wall\n  let wallBg = null;\n  if (selectedType === 'image') wallBg = {\n    type: 'image',\n    value: selectedWall\n  };else if (selectedType === 'color') wallBg = {\n    type: 'color',\n    value: selectedColor\n  };else if (selectedType === 'upload') wallBg = {\n    type: 'upload',\n    value: uploadedWall\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      style: {\n        width: '100%',\n        background: 'transparent',\n        zIndex: 100,\n        padding: '12px 0 0 0',\n        textAlign: 'center',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          boxShadow: '0 2px 12px rgba(0,0,0,0.10)',\n          borderRadius: 16,\n          padding: '8px 300px',\n          display: 'inline-block',\n          minWidth: 1300,\n          maxWidth: '99vw'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#3f51b5',\n            fontWeight: 'bold',\n            fontSize: 54,\n            letterSpacing: 2,\n            fontFamily: 'La Taquila, serif'\n          },\n          children: \"WALL POSTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      style: {\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        minHeight: '100vh',\n        gap: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          minWidth: 120,\n          marginTop: 40,\n          gap: 24\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 12,\n            alignItems: 'center'\n          },\n          children: defaultWalls.map((wall, idx) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: wall,\n            alt: `Wall ${idx + 1}`,\n            style: {\n              width: 80,\n              height: 56,\n              objectFit: 'cover',\n              border: selectedType === 'image' && selectedWall === wall ? '3px solid #2a509c' : '2px solid #ccc',\n              borderRadius: 8,\n              cursor: 'pointer'\n            },\n            onClick: () => handleWallClick(wall)\n          }, wall, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleUpload,\n            id: \"wall-upload\",\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"wall-upload\",\n            style: {\n              background: '#2a509c',\n              color: 'white',\n              padding: '6px 16px',\n              borderRadius: 6,\n              cursor: 'pointer',\n              fontWeight: 'bold'\n            },\n            children: \"Upload Wall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), uploadedWall && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: uploadedWall,\n            alt: \"Uploaded Wall\",\n            style: {\n              width: 80,\n              height: 56,\n              objectFit: 'cover',\n              borderRadius: 8,\n              marginTop: 8,\n              border: selectedType === 'upload' ? '3px solid #2a509c' : '2px solid #ccc',\n              cursor: 'pointer'\n            },\n            onClick: () => setSelectedType('upload')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          minWidth: 400,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Wall, {\n          wallBg: wallBg,\n          wallSize: {\n            width,\n            height\n          },\n          wallRef: wallRef,\n          images: wallImages,\n          setImages: setWallImages,\n          selectedImgId: selectedImgId,\n          setSelectedImgId: setSelectedImgId,\n          showShapeSelector: showShapeSelector,\n          setShowShapeSelector: setShowShapeSelector\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 16,\n            display: 'flex',\n            gap: 12,\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Width:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: width,\n              min: 200,\n              max: 2000,\n              onChange: e => setWidth(Number(e.target.value)),\n              style: {\n                marginLeft: 4,\n                width: 60\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Height:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: height,\n              min: 200,\n              max: 2000,\n              onChange: e => setHeight(Number(e.target.value)),\n              style: {\n                marginLeft: 4,\n                width: 60\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: 220,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 24,\n          marginTop: 40\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: '#2a509c',\n            color: 'white',\n            fontWeight: 'bold',\n            padding: '10px 24px',\n            borderRadius: 6,\n            fontSize: 18,\n            width: 200,\n            marginBottom: 8\n          },\n          onClick: handleColorButtonClick,\n          children: \"Choose Background Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), showColorPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            zIndex: 100,\n            marginBottom: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(ChromePicker, {\n            color: selectedColor,\n            onChange: handleColorChange,\n            disableAlpha: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          multiple: true,\n          id: \"upload-wall-img\",\n          style: {\n            display: 'none'\n          },\n          onChange: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"upload-wall-img\",\n          style: {\n            background: '#2a509c',\n            color: 'white',\n            fontWeight: 'bold',\n            padding: '10px 24px',\n            borderRadius: 6,\n            fontSize: 18,\n            width: 200,\n            textAlign: 'center',\n            cursor: 'pointer'\n          },\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: '#2a509c',\n            color: 'white',\n            fontWeight: 'bold',\n            padding: '10px 24px',\n            borderRadius: 6,\n            fontSize: 18,\n            width: 200,\n            opacity: selectedImgId ? 1 : 0.5,\n            cursor: selectedImgId ? 'pointer' : 'not-allowed'\n          },\n          onClick: handleSelectShape,\n          disabled: !selectedImgId,\n          children: \"Select Shape\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: '#2a509c',\n            color: 'white',\n            fontWeight: 'bold',\n            padding: '10px 24px',\n            borderRadius: 6,\n            fontSize: 18,\n            width: 200\n          },\n          onClick: handleSaveWall,\n          children: \"Save Wall\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: '#2a509c',\n            color: 'white',\n            fontWeight: 'bold',\n            padding: '10px 24px',\n            borderRadius: 6,\n            fontSize: 18,\n            width: 200\n          },\n          onClick: handleDeleteSelected,\n          children: \"Delete Selected Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"246OW+hnfwRv3h1zqdbH0TRH5pw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Wall","ChromePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultWalls","App","_s","selectedType","setSelectedType","selectedWall","setSelectedWall","selectedColor","setSelectedColor","uploadedWall","setUploadedWall","width","setWidth","height","setHeight","showColorPicker","setShowColorPicker","wallRef","selectedImgId","setSelectedImgId","showShapeSelector","setShowShapeSelector","wallImages","setWallImages","handleWallClick","wall","handleColorButtonClick","prev","handleColorChange","color","hex","handleUpload","e","file","target","files","URL","createObjectURL","handleImageUpload","Array","from","newImages","map","index","id","Date","now","src","x","y","shape","zoom","handleSelectShape","handleDeleteSelected","filter","img","handleSaveWall","current","html2canvas","default","canvas","link","document","createElement","download","href","toDataURL","click","wallBg","type","value","children","style","background","zIndex","padding","textAlign","display","justifyContent","boxShadow","borderRadius","minWidth","maxWidth","fontWeight","fontSize","letterSpacing","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","className","flexDirection","alignItems","minHeight","gap","marginTop","idx","alt","objectFit","border","cursor","onClick","accept","onChange","htmlFor","flex","wallSize","images","setImages","min","max","Number","marginLeft","marginBottom","disableAlpha","multiple","opacity","disabled","_c","$RefreshReg$"],"sources":["E:/CustomWallApp/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Wall from './Wall';\r\nimport './Wall.css';\r\nimport { ChromePicker } from 'react-color';\r\n\r\nconst defaultWalls = [\r\n  '/walls/wall1.jpg',\r\n  '/walls/wall2.jpg',\r\n  '/walls/wall3.jpg',\r\n  '/walls/wall4.jpg',\r\n  '/walls/wall5.jpg',\r\n  '/walls/wall6.jpg',\r\n];\r\n\r\nfunction App() {\r\n  // Wall background state\r\n  const [selectedType, setSelectedType] = useState('image');\r\n  const [selectedWall, setSelectedWall] = useState(defaultWalls[0]);\r\n  const [selectedColor, setSelectedColor] = useState('#ffffff');\r\n  const [uploadedWall, setUploadedWall] = useState(null);\r\n  const [width, setWidth] = useState(800);\r\n  const [height, setHeight] = useState(500);\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n\r\n  // Wall image editing state (for right controls)\r\n  const wallRef = useRef();\r\n  const [selectedImgId, setSelectedImgId] = useState(null);\r\n  const [showShapeSelector, setShowShapeSelector] = useState(false);\r\n  const [wallImages, setWallImages] = useState([]);\r\n\r\n  // Handle wall background selection\r\n  const handleWallClick = (wall) => {\r\n    setSelectedType('image');\r\n    setSelectedWall(wall);\r\n    setUploadedWall(null);\r\n  };\r\n  const handleColorButtonClick = () => {\r\n    setShowColorPicker((prev) => !prev);\r\n  };\r\n  const handleColorChange = (color) => {\r\n    setSelectedType('color');\r\n    setSelectedColor(color.hex);\r\n    setSelectedWall(null);\r\n    setUploadedWall(null);\r\n  };\r\n  const handleUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setSelectedType('upload');\r\n      setUploadedWall(URL.createObjectURL(file));\r\n      setSelectedWall(null);\r\n    }\r\n  };\r\n\r\n  // Wall image controls (for images placed on the wall)\r\n  const handleImageUpload = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    const newImages = files.map((file, index) => ({\r\n      id: Date.now() + index,\r\n      src: URL.createObjectURL(file),\r\n      x: 0,\r\n      y: 0,\r\n      width: 150,\r\n      height: 150,\r\n      shape: 'rectangle',\r\n      zoom: 1,\r\n    }));\r\n    setWallImages((prev) => [...prev, ...newImages]);\r\n  };\r\n  const handleSelectShape = () => {\r\n    if (selectedImgId) setShowShapeSelector(true);\r\n  };\r\n  const handleDeleteSelected = () => {\r\n    if (selectedImgId !== null) {\r\n      setWallImages((prev) => prev.filter((img) => img.id !== selectedImgId));\r\n      setSelectedImgId(null);\r\n    }\r\n  };\r\n  const handleSaveWall = async () => {\r\n    if (!wallRef.current) return;\r\n    const html2canvas = (await import('html2canvas')).default;\r\n    const canvas = await html2canvas(wallRef.current);\r\n    const link = document.createElement('a');\r\n    link.download = 'custom-wall.png';\r\n    link.href = canvas.toDataURL('image/png');\r\n    link.click();\r\n  };\r\n\r\n  // Compose wallBg prop for Wall\r\n  let wallBg = null;\r\n  if (selectedType === 'image') wallBg = { type: 'image', value: selectedWall };\r\n  else if (selectedType === 'color') wallBg = { type: 'color', value: selectedColor };\r\n  else if (selectedType === 'upload') wallBg = { type: 'upload', value: uploadedWall };\r\n\r\n  return (\r\n    <>\r\n      {/* NavBar */}\r\n      <nav style={{\r\n        width: '100%',\r\n        background: 'transparent',\r\n        zIndex: 100,\r\n        padding: '12px 0 0 0',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n      }}>\r\n        <div style={{\r\n          background: '#fff',\r\n          boxShadow: '0 2px 12px rgba(0,0,0,0.10)',\r\n          borderRadius: 16,\r\n          padding: '8px 300px',\r\n          display: 'inline-block',\r\n          minWidth: 1300,\r\n          maxWidth: '99vw',\r\n        }}>\r\n          <span style={{\r\n            color: '#3f51b5',\r\n            fontWeight: 'bold',\r\n            fontSize: 54,\r\n            letterSpacing: 2,\r\n            fontFamily: 'La Taquila, serif',\r\n          }}>\r\n            WALL POSTER\r\n          </span>\r\n        </div>\r\n      </nav>\r\n      <div className=\"main-layout\" style={{ flexDirection: 'row', alignItems: 'flex-start', justifyContent: 'center', minHeight: '100vh', gap: 40 }}>\r\n        {/* Left: Wall background selection (vertical) */}\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', minWidth: 120, marginTop: 40, gap: 24 }}>\r\n          <div style={{ display: 'flex', flexDirection: 'column', gap: 12, alignItems: 'center' }}>\r\n            {defaultWalls.map((wall, idx) => (\r\n              <img\r\n                key={wall}\r\n                src={wall}\r\n                alt={`Wall ${idx + 1}`}\r\n                style={{\r\n                  width: 80,\r\n                  height: 56,\r\n                  objectFit: 'cover',\r\n                  border: selectedType === 'image' && selectedWall === wall ? '3px solid #2a509c' : '2px solid #ccc',\r\n                  borderRadius: 8,\r\n                  cursor: 'pointer',\r\n                }}\r\n                onClick={() => handleWallClick(wall)}\r\n              />\r\n            ))}\r\n          </div>\r\n          {/* Upload custom wall background */}\r\n          <div style={{ marginTop: 16 }}>\r\n            <input type=\"file\" accept=\"image/*\" onChange={handleUpload} id=\"wall-upload\" style={{ display: 'none' }} />\r\n            <label htmlFor=\"wall-upload\" style={{ background: '#2a509c', color: 'white', padding: '6px 16px', borderRadius: 6, cursor: 'pointer', fontWeight: 'bold' }}>\r\n              Upload Wall\r\n            </label>\r\n            {uploadedWall && (\r\n              <img src={uploadedWall} alt=\"Uploaded Wall\" style={{ width: 80, height: 56, objectFit: 'cover', borderRadius: 8, marginTop: 8, border: selectedType === 'upload' ? '3px solid #2a509c' : '2px solid #ccc', cursor: 'pointer' }} onClick={() => setSelectedType('upload')} />\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* Center: Wall preview and controls */}\r\n        <div style={{ flex: 1, minWidth: 400, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n          {/* Wall preview (centered) */}\r\n          <Wall\r\n            wallBg={wallBg}\r\n            wallSize={{ width, height }}\r\n            wallRef={wallRef}\r\n            images={wallImages}\r\n            setImages={setWallImages}\r\n            selectedImgId={selectedImgId}\r\n            setSelectedImgId={setSelectedImgId}\r\n            showShapeSelector={showShapeSelector}\r\n            setShowShapeSelector={setShowShapeSelector}\r\n          />\r\n          {/* Wall size controls (moved below preview) */}\r\n          <div style={{ marginTop: 16, display: 'flex', gap: 12, alignItems: 'center', justifyContent: 'center' }}>\r\n            <label>\r\n              Width:\r\n              <input type=\"number\" value={width} min={200} max={2000} onChange={e => setWidth(Number(e.target.value))} style={{ marginLeft: 4, width: 60 }} />\r\n            </label>\r\n            <label>\r\n              Height:\r\n              <input type=\"number\" value={height} min={200} max={2000} onChange={e => setHeight(Number(e.target.value))} style={{ marginLeft: 4, width: 60 }} />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        {/* Right: Controls (color picker toggle and wall image controls) */}\r\n        <div style={{ minWidth: 220, display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 24, marginTop: 40 }}>\r\n          <button\r\n            style={{ background: '#2a509c', color: 'white', fontWeight: 'bold', padding: '10px 24px', borderRadius: 6, fontSize: 18, width: 200, marginBottom: 8 }}\r\n            onClick={handleColorButtonClick}\r\n          >\r\n            Choose Background Color\r\n          </button>\r\n          {showColorPicker && (\r\n            <div style={{ zIndex: 100, marginBottom: 16 }}>\r\n              <ChromePicker color={selectedColor} onChange={handleColorChange} disableAlpha={true} />\r\n            </div>\r\n          )}\r\n          <input type=\"file\" accept=\"image/*\" multiple id=\"upload-wall-img\" style={{ display: 'none' }} onChange={handleImageUpload} />\r\n          <label htmlFor=\"upload-wall-img\" style={{ background: '#2a509c', color: 'white', fontWeight: 'bold', padding: '10px 24px', borderRadius: 6, fontSize: 18, width: 200, textAlign: 'center', cursor: 'pointer' }}>\r\n            Upload Image\r\n          </label>\r\n          <button\r\n            style={{ background: '#2a509c', color: 'white', fontWeight: 'bold', padding: '10px 24px', borderRadius: 6, fontSize: 18, width: 200, opacity: selectedImgId ? 1 : 0.5, cursor: selectedImgId ? 'pointer' : 'not-allowed' }}\r\n            onClick={handleSelectShape}\r\n            disabled={!selectedImgId}\r\n          >\r\n            Select Shape\r\n          </button>\r\n          <button\r\n            style={{ background: '#2a509c', color: 'white', fontWeight: 'bold', padding: '10px 24px', borderRadius: 6, fontSize: 18, width: 200 }}\r\n            onClick={handleSaveWall}\r\n          >\r\n            Save Wall\r\n          </button>\r\n          <button\r\n            style={{ background: '#2a509c', color: 'white', fontWeight: 'bold', padding: '10px 24px', borderRadius: 6, fontSize: 18, width: 200 }}\r\n            onClick={handleDeleteSelected}\r\n          >\r\n            Delete Selected Image\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}